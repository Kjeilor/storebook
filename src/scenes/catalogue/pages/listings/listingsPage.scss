// src/scenes/catalogue/pages/listings/listingsPage.scss

// Redeclared variables for this file only, as no global variables file exists
$primary-color: #29ab87;
$secondary-color: #6c757d;
$background-color: #f8f9fa;
$card-background: #ffffff;
$border-radius: 8px;
$shadow-light: rgba(0, 0, 0, 0.08) 0px 4px 12px;
$spacing-unit: 1rem;

.listings-page-wrapper {
  display: flex;
  flex-direction: column;
  gap: $spacing-unit * 1.5;
  padding: $spacing-unit;
  background-color: $background-color;
  border-radius: $border-radius;
  box-shadow: $shadow-light;
  // min-height: calc(100vh - 100px - 40px); /* Adjust based on actual header/footer heights */
}

.listings-header {
  display: flex;
  flex-direction: column;
  gap: $spacing-unit;
  padding-bottom: $spacing-unit;
  border-bottom: 1px solid #eee;

  .action-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: $spacing-unit;
    flex-wrap: wrap;

    .add-item-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.25rem;
      font-weight: 600;
      color: #ffffff;
      background: $primary-color;
      border: none;
      border-radius: $border-radius;
      cursor: pointer;
      transition: background-color 0.2s ease, box-shadow 0.2s ease;

      &:hover {
        background-color: darken($primary-color, 10%);
        box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px;
      }
    }

    .view-toggle-group {
      display: flex;
      border: 1px solid #dee2e6;
      border-radius: $border-radius;
      overflow: hidden;

      button {
        background-color: $card-background;
        border: none;
        padding: 0.5rem 0.75rem;
        cursor: pointer;
        color: $secondary-color;
        transition: all 0.2s ease;

        &:first-child { border-right: 1px solid #dee2e6; }

        &:hover {
          background-color: #e9ecef;
          color: #495057;
        }

        &.active {
          background-color: $primary-color;
          color: white;
        }
      }
    }

    .sort-btn, .filter-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.6rem;
      min-width: 40px;
      min-height: 40px;
      background-color: $card-background;
      border: 1px solid #dee2e6;
      border-radius: $border-radius;
      cursor: pointer;
      transition: all 0.2s ease;
      color: $secondary-color;

      &:hover {
        background-color: #e9ecef;
        color: #495057;
      }
    }

    .search-bar-container {
      flex-grow: 1;
      max-width: 300px;
    }
  }

  .listings-content-grid {
    display: flex;
    flex-direction: row; // Keep row for grid layout
    // padding: 1rem; // This padding is handled by productCard.scss now
    background-color: yellow; // KEEP for now to see its boundary
    flex-wrap: wrap; /* CRITICAL: Allows cards to wrap to the next line */
    gap: $spacing-unit; /* Spacing between cards */
    justify-content: flex-start; /* Align items to the start of the row */

    flex-grow: 1; /* Allows the grid to take up available vertical space within its parent */
    overflow-y: auto; /* Enables vertical scrolling when content exceeds container height */

    &.grid-view {
      gap: $spacing-unit; // Ensure gap is consistent
      .card { // ProductCard's base class - defining its layout within the grid
        // Reverting to your original calc() for 3 columns:
        flex: 0 0 calc(33.333% - #{$spacing-unit * 2 / 3});
        max-width: calc(33.333% - #{$spacing-unit * 2 / 3});
        min-width: 250px; // Default minimum width for cards
        box-sizing: border-box; // Essential for correct width calculation with padding
      }

      @media (max-width: 1200px) {
        .card {
          flex: 0 0 calc(50% - #{$spacing-unit / 2}); // 2 columns on medium screens
          max-width: calc(50% - #{$spacing-unit / 2});
          min-width: 250px; // Maintain minimum
        }
      }

      @media (max-width: 768px) {
        .card {
          flex: 0 0 100%; // Single column on small screens
          max-width: 100%;
          min-width: unset; // Remove min-width when 100%
        }
      }
    }

    &.list-view {
      flex-direction: column; // Stack cards vertically in list view
      flex-wrap: nowrap; // No wrapping in list view (they should just stack)
      .card {
        flex: 0 0 auto;
        width: 100%;
        box-sizing: border-box;
      }
    }
  }

  .empty-state {
    width: 100%;
    text-align: center;
    padding: $spacing-unit * 2;
    color: $secondary-color;
    font-size: 1.1rem;
  }

  .listings-page-loading, .listings-page-error {
    text-align: center;
    padding: $spacing-unit * 3;
    font-size: 1.2rem;
    color: $secondary-color;
  }

  .listings-page-error {
    color: #dc3545;
  }

}